/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.imti;

import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import org.elasticsearch.action.search.SearchRequest;
import org.elasticsearch.client.RequestOptions;
import org.elasticsearch.client.RestHighLevelClient;
import org.elasticsearch.search.SearchHit;
import org.elasticsearch.search.builder.SearchSourceBuilder;

public class App {

  private static final Logger LOGGER = Logger.getLogger(App.class.getName());


  public static void main(String[] args) throws IOException {
    final var customers = new App().getCustomerWithBalanceBetween();
    LOGGER.log(Level.INFO, "\n{0}", String.join("\n", customers));
  }

  public List<String> getCustomerWithBalanceBetween() throws IOException {
    final ElasticsearchConfig elasticsearchConfig = new ElasticsearchConfig();
    final RestHighLevelClient restHighLevelClient = elasticsearchConfig.restHighLevelClient();
    final var queryBuilder = new AccountQueryBuilder().queryBuilder();

    final var searchSourceBuilder = new SearchSourceBuilder();
    searchSourceBuilder.size(1000);
    searchSourceBuilder.query(queryBuilder);
    searchSourceBuilder.sort("balance");

    final var searchRequest = new SearchRequest();
    searchRequest.indices("accounts");
    searchRequest.source(searchSourceBuilder);
    final var searchResponse = restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);
    final var hits = searchResponse.getHits().getHits();
    final var customers = Arrays.stream(hits)
        .map(SearchHit::getSourceAsMap)
        // Here we are mapping the data to string. you can also map to some object like Account
        .map(stringObjectMap -> "Name: " + stringObjectMap.get("firstname") + " "
            + stringObjectMap.get("lastname") + ", Balance: " + stringObjectMap.get("balance"))
        .collect(Collectors.toList());
    restHighLevelClient.close();
    return customers;
  }
}
